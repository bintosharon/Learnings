Jenkins Initial admin password
e670934bdac246428a093e424ea051bb

tar -xvzf <maven zipped file>				# to extract zipped files


cd ~							#to go to root home directory

ll -a							#view all files, including hidden


							#in bash_profile
M2_Home
M2
JAVA_HOME = find / -name jvm

source .bash_profile					#the changes will apply on restart so instead of that we are loading only the bash profile file


clean install						#maven goal


Tomcat with Jenkins: 

Plugins: deploy to container

manage jenkins-> add credentials



Cron JOB:
* * * * *


docker:

yum install docker -y
service docker status
service docker start

docker images
docker ps
docker ps -a
docker --help

hub.docker.com #for all images, We can search for flask images too.

docker pull tomcat

#init 6 to restart ec2 instance

docker run -d --name tomcat-container -p 8081:8080 tomcat
					externally expose:internally run
docker exec -it <container id or container name> /bin/bash

cp -R * ../webapps/


Dockerfile

FROM: to pull the base image
RUN: To execute commands
CMD: To provide defaults of executing container - execute at docker execution
ENTRYPOINT: To configure a container that will run as executable- cannot be overwritten, like CMD
WORKDIR: To set the working directory - like cd command
COPY: copy directory from local machine to docker container
ADD: copy files and folders from local machine to docker container - we can also use this like wget command
EXPOSE:  informs docker that container listens on the specified network ports
ENV:

see dockerfile instuctions 

from run cMD copy workdir entrypoint aDD expose

docker build -t mytomcat .


cat /etc/passwd 	# to know what are the users are there
useradd dockeradmin 	#add a admin user
passwd dockeradmin	# to set a password 31bkst
id dockeradmin 		# to see what group, 
cat /etc/group		# to see group
usermod -aG docker dockeradmin	# to create a group and add that user
vi /etc/ssh/sshd_config	#for ec2 instances, enabling password
/Password 		#in Vi editor
service sshd reload	#reload services
publish over ssh 	#send artificat thru ssh

sudo su - dockeradmin	#login as dockeradmin
ssh-keygen
cd /home/dockeradmin/.ssh



chown -R dockeradmin:dockeradmin docker
COPY ./*.war /usr/local/tomcat/webapps

exec: 
cd /opt/docker;
docker build -t regapp:v1 .;
docker run -d --name registerapp -p 8086:8080 regapp:v1



docker image prune -a
docker container prune